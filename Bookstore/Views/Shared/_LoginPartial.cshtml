@using Microsoft.AspNetCore.Identity
@using Bookstore.Services.Moderators
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject IModeratorService Moderators

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    
    var userId = User.Id();
    var userIsModerator = Moderators.IsModerator(userId);
    

    @if (userIsModerator)
   {
    <li class="nav-item">
        <a  class="nav-link text-dark" asp-area="" asp-controller="Books" asp-action="Mine">My Books</a>
            </li>
        }
        else
        {
         <li class="nav-item">
           <a  class="nav-link text-dark" asp-area="" asp-controller="Moderators" asp-action="Create">Become Moderator</a>
         </li>
        }



    
    
    <li class="nav-item">
        <a  class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">My Account</a>
    </li>
    
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
